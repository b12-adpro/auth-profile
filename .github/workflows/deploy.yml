name: Deploy to Koyeb

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_FULL_IMAGE_NAME: docker.io/rooout/auth-profile:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Removed JDK setup and JAR build steps as they are now handled by the Dockerfile's multi-stage build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3 # Use v3 for latest
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        # Use the env variables defined above for image name and tag
        run: |
          docker build -t ${{ env.DOCKER_FULL_IMAGE_NAME }} .
          docker push ${{ env.DOCKER_FULL_IMAGE_NAME }}

      - name: Verify Deployment (Optional)
        # This step is mostly for verification. Koyeb will handle the actual redeploy.
        # You can add a small delay and then check service status or logs if you have Koyeb CLI configured.
        # For simplicity, we'll assume Koyeb's auto-deployment works.
        run: echo "Koyeb service configured for automatic deployment from Docker Hub. New image pushed."