name: Deploy to Koyeb

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          echo "üî® Building Docker image..."
          docker build -t ${{ secrets.DOCKER_FULL_IMAGE_NAME }} .
          echo "üì¶ Pushing Docker image..."
          docker push ${{ secrets.DOCKER_FULL_IMAGE_NAME }}

      - name: Get Previous Deployment ID
        id: get_previous
        run: |
          echo "üì¶ Fetching previous successful deployment ID..."
          prev_id=$(curl -s "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | \
            jq -r '.deployments[] | select(.status=="SUCCESS") | .id' | head -n 1)
          echo "prev_deployment_id=$prev_id" >> $GITHUB_OUTPUT

      - name: Get Current Latest Deployment ID
        id: current_latest
        run: |
          echo "üì¶ Fetching current latest deployment ID..."
          current_latest=$(curl -s "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | jq -r '.deployments[0].id')
          echo "current_latest_id=$current_latest" >> $GITHUB_OUTPUT

      - name: Trigger New Deployment
        run: |
          echo "üöÄ Triggering new deployment..."
          curl -s -X POST "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/redeploy" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" \
            -H "Content-Type: application/json" --data '{}'
          echo "Redeploy triggered."

      - name: Wait and Check Deployment Status
        id: check_status
        continue-on-error: true
        run: |
          MAX_ATTEMPTS=20
          echo "‚è≥ Waiting for new deployment to appear..."
          for ((i=1; i<=MAX_ATTEMPTS; i++)); do
            latest_deployment_id=$(curl -s "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments" \
              -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | jq -r '.deployments[0].id')

            if [ "$latest_deployment_id" != "${{ steps.current_latest.outputs.current_latest_id }}" ]; then
              echo "‚úÖ New deployment detected: $latest_deployment_id"
              echo "latest_deployment_id=$latest_deployment_id" >> $GITHUB_OUTPUT
              break
            fi

            echo "Attempt $i/$MAX_ATTEMPTS - Waiting for new deployment..."
            sleep 5
          done

          if [ -z "$latest_deployment_id" ] || [ "$latest_deployment_id" = "${{ steps.current_latest.outputs.current_latest_id }}" ]; then
            echo "‚ùå No new deployment detected."
            echo "deployment_status=FAILED" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "üîç Checking new deployment status..."
          for ((i=1; i<=MAX_ATTEMPTS; i++)); do
            status=$(curl -s "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments/$latest_deployment_id" \
              -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | jq -r '.status')

            echo "Attempt $i/$MAX_ATTEMPTS - Deployment status: $status"

            if [ "$status" = "SUCCESS" ]; then
              echo "‚úÖ Deployment succeeded."
              echo "deployment_status=SUCCESS" >> $GITHUB_OUTPUT
              exit 0
            elif [ "$status" = "FAILED" ]; then
              echo "‚ùå Deployment failed."
              echo "deployment_status=FAILED" >> $GITHUB_OUTPUT
              exit 1
            fi

            sleep 5
          done

          echo "‚ùå Deployment did not complete within expected time."
          echo "deployment_status=FAILED" >> $GITHUB_OUTPUT
          exit 1

      - name: Rollback if Deployment Failed
        if: ${{ steps.check_status.outputs.deployment_status == 'FAILED' }}
        run: |
          echo "‚ö†Ô∏è Rolling back to previous deployment: ${{ steps.get_previous.outputs.prev_deployment_id }}"
          curl -X POST "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments/${{ steps.get_previous.outputs.prev_deployment_id }}/redeploy" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" \
            -H "Content-Type: application/json"
          echo "Rollback triggered."
