name: Deploy to Koyeb

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_FULL_IMAGE_NAME }} .
          docker push ${{ secrets.DOCKER_FULL_IMAGE_NAME }}

      - name: Trigger Koyeb Redeploy
        id: redeploy
        run: |
          echo "Triggering Koyeb redeployment for service..."
          DEPLOY_RESPONSE=$(curl -s -X POST "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/redeploy" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{}')
          
          DEPLOYMENT_ID=$(echo $DEPLOY_RESPONSE | jq -r '.deployment.id')
          
          if [ "$DEPLOYMENT_ID" == "null" ]; then
            echo "Failed to trigger deployment."
            exit 1
          fi
          
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}

      - name: Monitor Deployment Status
        id: monitor
        run: |
          echo "Monitoring deployment status..."
          ATTEMPTS=0
          MAX_ATTEMPTS=20
          SLEEP_TIME=30
          
          while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
            STATUS=$(curl -s -X GET "https://app.koyeb.com/v1/deployments/${{ steps.redeploy.outputs.deployment_id }}" \
              -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | jq -r '.deployment.status')
            
            echo "Current status: $STATUS"
            
            if [ "$STATUS" == "SUCCESS" ]; then
              echo "Deployment successful."
              exit 0
            elif [ "$STATUS" == "FAILED" ]; then
              echo "Deployment failed."
              exit 1
            fi
            
            ATTEMPTS=$((ATTEMPTS+1))
            sleep $SLEEP_TIME
          done

          echo "Deployment status check timed out."
          exit 1
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}

      - name: Rollback if Deployment Failed
        if: failure()
        run: |
          echo "Rolling back to previous deployment..."
          PREVIOUS_DEPLOYMENT=$(curl -s -X GET "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" | jq -r '.deployments[] | select(.status=="SUCCESS") | .id' | head -n 1)
          
          if [ -z "$PREVIOUS_DEPLOYMENT" ]; then
            echo "No previous successful deployment found. Manual intervention needed."
            exit 1
          fi
          
          echo "Redeploying previous deployment: $PREVIOUS_DEPLOYMENT"
          curl -s -X POST "https://app.koyeb.com/v1/services/${{ secrets.KOYEB_SERVICE_ID }}/deployments/$PREVIOUS_DEPLOYMENT/redeploy" \
            -H "Authorization: Bearer ${{ secrets.KOYEB_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{}'
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
